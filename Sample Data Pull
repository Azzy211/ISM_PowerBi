/********************************************************************/
let
  url = "https://mytenant.com", /* Tenant url*/
  object = "ServiceReq", /* Object to query*/
  apikey = "rest_api_key=myRESTAPIKey", /* API key with read only access*/
  Source = Json.Document(Web.Contents(url&"/api/odata/businessobject/"& object &"s", [Headers=[Authorization=apikey]])),
  RecordstoList = List.Numbers(0,Number.RoundUp(Source[#"@odata.count"]/100),100),
  #"Converted to Table" = Table.FromList(RecordstoList, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
  #"Changed Type" = Table.TransformColumnTypes(#"Converted to Table",{{"Column1", type text}}),
  #"Added Custom" = Table.AddColumn(#"Changed Type", "WebCalls", each Web.Contents(url & "/api/odata/businessobject/"& object &"s?$top=100&$skip="&[Column1], [Headers=[Authorization=apikey]])),
  #"Filtered Hidden Files1" = Table.SelectRows(#"Added Custom", each [Attributes]?[Hidden]? <> true),
  #"Invoke Custom Function1" = Table.AddColumn(#"Filtered Hidden Files1", "Transform File (3)", each #"Transform File (3)"([WebCalls])),
  #"Removed Other Columns1" = Table.SelectColumns(#"Invoke Custom Function1", {"Transform File (3)"}),
  #"Expanded Table Column1" = Table.ExpandTableColumn(#"Removed Other Columns1", "Transform File (3)", Table.ColumnNames(#"Transform File (3)"(#"Sample File (3)"))),
  #"Changed Type1" = Table.TransformColumnTypes(#"Expanded Table Column1",{{"@odata.context", type text}, {"@odata.count", Int64.Type}, {"value.RecId", type text}, {"value.LastModDateTime", type datetime}, {"value.LastModBy", type text}, {"value.CreatedDateTime", type datetime}, {"value.CreatedBy", type text}, {"value.OwnerType", type any}, {"value.Owner_Valid", type text}, {"value.Owner", type text}, {"value.OwnerTeam_Valid", type text}, {"value.OwnerTeam", type text}, {"value.ServiceReqNumber", Int64.Type}, {"value.ClosedBy", type text}, {"value.ClosedDateTime", type datetime}, {"value.ResolvedBy", type text}, {"value.ResolvedDateTime", type datetime}, {"value.OwnerEmail", type text}, {"value.OwnerTeamEmail", type text}, {"value.OwnershipAssignmentEmail", type text}, {"value.ProfileLink_Category", type text}, {"value.ProfileLink_RecID", type text}, {"value.ProfileLink", type text}, {"value.Email", type text}, {"value.ProfileFullName", type text}, {"value.CustomerLocation", type text}, {"value.IsVIP", type logical}, {"value.IsReportedByAlternateContact", type logical}, {"value.AlternateContactLink_Category", type any}, {"value.AlternateContactLink_RecID", type any}, {"value.AlternateContactLink", type any}, {"value.Status_Valid", type text}, {"value.Status", type text}, {"value.Service_Valid", type text}, {"value.Service", type text}, {"value.Source_Valid", type text}, {"value.Source", type text}, {"value.Urgency_Valid", type text}, {"value.Urgency", type text}, {"value.Subject", type text}, {"value.Symptom", type text}, {"value.ResolutionEscLink_Category", type text}, {"value.ResolutionEscLink_RecID", type text}, {"value.ResolutionEscLink", type text}, {"value.IncidentLink_Category", type text}, {"value.IncidentLink_RecID", type text}, {"value.IncidentLink", type text}, {"value.Price_Currency", type text}, {"value.Price_CurrencyValid", type text}, {"value.Price", type number}, {"value.IsNewRecord", type logical}, {"value.WaitingEscLink_Category", type text}, {"value.WaitingEscLink_RecID", type text}, {"value.WaitingEscLink", type text}, {"value.ClosingEscLink_Category", type text}, {"value.ClosingEscLink_RecID", type text}, {"value.ClosingEscLink", type text}, {"value.Phone", type text}, {"value.SvcReqTmplLink_Category", type text}, {"value.SvcReqTmplLink_RecID", type text}, {"value.SvcReqTmplLink", type text}, {"value.SvcReqSubscLink_Category", type text}, {"value.SvcReqSubscLink_RecID", type text}, {"value.SvcReqSubscLink", type text}, {"value.ParentSvcReqLink_Category", type any}, {"value.ParentSvcReqLink_RecID", type any}, {"value.ParentSvcReqLink", type any}, {"value.ResponseEscLink_Category", type text}, {"value.ResponseEscLink_RecID", type text}, {"value.ResponseEscLink", type text}, {"value.IsInFinalState", type logical}, {"value.ProgressBarPosition", Int64.Type}, {"value.OrgUnitLink_Category", type text}, {"value.OrgUnitLink_RecID", type text}, {"value.OrgUnitLink", type text}, {"value.SLALink_Category", type text}, {"value.SLALink_RecID", type text}, {"value.SLALink", type text}, {"value.FulfillmentPlanLink_Category", type any}, {"value.FulfillmentPlanLink_RecID", type any}, {"value.FulfillmentPlanLink", type any}, {"value.Cost_Currency", type text}, {"value.Cost_CurrencyValid", type text}, {"value.Cost", type number}, {"value.CostPerMinute_Currency", type any}, {"value.CostPerMinute_CurrencyValid", type any}, {"value.CostPerMinute", type any}, {"value.DefaultApprover_Valid", type text}, {"value.DefaultApprover", type text}, {"value.SLA", type text}, {"value.SLADisplayText", type text}, {"value.OrganizationUnitID", type text}, {"value.ReadOnly", type logical}, {"value.ProfileLoginId", type text}, {"value.TotalTimeSpent", Int64.Type}, {"value.IsDSMTaskExisted", type logical}, {"value.DraftPrice_Currency", type text}, {"value.DraftPrice_CurrencyValid", type text}, {"value.DraftPrice", Int64.Type}, {"value.IsDraft", type logical}, {"value.RequestOfferingWFTrigger", type text}, {"value.LoginId", type any}, {"value.Cancelable", type logical}, {"value.Resolution", type any}, {"value.TemplateCancelable", type logical}, {"value.SendSurveyNotification", type logical}, {"value.EntityLink_Category", type text}, {"value.EntityLink_RecID", type text}, {"value.EntityLink", type text}, {"value.IsEditable", type logical}, {"value.IsTemplateEditable", type logical}, {"value.ForceNotCancelable", type logical}, {"value.ForceNotEditable", type logical}, {"value.IsNewRequestNotificationSent", type logical}, {"value.IsExternal", type logical}, {"value.ExternalViewUrl", type any}, {"value.RecurrentPrice_Currency", type any}, {"value.RecurrentPrice_CurrencyValid", type any}, {"value.RecurrentPrice", type any}, {"value.RecurrentPeriod", type any}, {"value.TaskPriceUSD_Currency", type any}, {"value.TaskPriceUSD_CurrencyValid", type any}, {"value.TaskPriceUSD", type any}, {"value.TaskCostUSD_Currency", type text}, {"value.TaskCostUSD_CurrencyValid", type any}, {"value.TaskCostUSD", type number}, {"value.ChargingAccount_Valid", type text}, {"value.ChargingAccount", type text}, {"value.ServiceReqTemplateDefinitionLink_Category", type text}, {"value.ServiceReqTemplateDefinitionLink_RecID", type text}, {"value.ServiceReqTemplateDefinitionLink", type text}, {"value.HasScriptRun", type logical}, {"value.InShoppingCart", type logical}, {"value.IsUnRead", type logical}, {"value.ivnt_PurchaseRequestCount", Int64.Type}, {"value.ivnt_RequestedCatalogItemCount", Int64.Type}, {"value.ivnt_CILink_Category", type any}, {"value.ivnt_CILink_RecID", type any}, {"value.ivnt_CILink", type any}, {"value.ivnt_ProductCatalogLink_Category", type any}, {"value.ivnt_ProductCatalogLink_RecID", type any}, {"value.ivnt_ProductCatalogLink", type any}, {"value.BlockRequest", type logical}, {"value.Reorder_global_constant", type logical}, {"value.ReorderContinue", type logical}, {"value.WaitRequest", type any}, {"value.HRCaseLink_Category", type any}, {"value.HRCaseLink_RecID", type any}, {"value.HRCaseLink", type any}, {"value.ivnt_LinkHRCases_Category", type any}, {"value.ivnt_LinkHRCases_RecID", type any}, {"value.ivnt_LinkHRCases", type any}, {"value.ivnt_TimeSheetDuplicate", type logical}, {"value.OfferStatus_Valid", type any}, {"value.OfferStatus", type any}, {"value.ivnt_WorkOrderLink_Category", type any}, {"value.ivnt_WorkOrderLink_RecID", type any}, {"value.ivnt_WorkOrderLink", type any}, {"value.ivnt_SecurityIncidentLink_Category", type any}, {"value.ivnt_SecurityIncidentLink_RecID", type any}, {"value.ivnt_SecurityIncidentLink", type any}, {"value.AC_Test_IF_Block", type logical}, {"value.AC_TaskCompletionDetails", type text}, {"value.AC_TaskLink_Category", type any}, {"value.AC_TaskLink_RecID", type any}, {"value.AC_TaskLink", type any}})

/*Once run take binary output from column and combine files*/
/*Manage any column exceptions as normal*/

/*Uncomment this once added to fix column names*/
/*  #"Custom1" = Table.TransformColumnNames(#"Changed Type1",each Text.Replace(_,"value.","")) */

in
  #"Changed Type1" /* Delete this line*/
  /*#"Custom1" uncomment this*/
/********************************************************************/

